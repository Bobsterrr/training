//–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —à—É—Ç–æ–∫ —Å –ø—Ä–æ–ø—É—Å–∫–∞–º–∏
// –¶–µ–ª—å: –ü–æ–Ω—è—Ç—å, –∫–∞–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –æ—Ç–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–æ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –µ–≥–æ –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ yield.
//
// üß† –£—Å–ª–æ–≤–∏–µ
// –£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ ¬´—à—É—Ç–æ–∫ —Å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏¬ª, –Ω–∞–ø—Ä–∏–º–µ—Ä:
//
// js
// –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
// const jokes = [
//   ["–ü–æ—á–µ–º—É –∫—É—Ä–∏—Ü–∞ –ø–µ—Ä–µ—à–ª–∞", "–¥–æ—Ä–æ–≥—É?"],
//   ["–ö–∞–∫ –∑–æ–≤—É—Ç —Å–æ–±–∞–∫—É –±–µ–∑ –ª–∞–ø?", "–ù–µ–≤–∞–∂–Ω–æ ‚Äî –æ–Ω–∞ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø—Ä–∏–¥—ë—Ç."],
//   ["–ß—Ç–æ —Å–∫–∞–∂–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–≤–∏–¥–µ–≤ –∫—Ä–∞—Å–∏–≤—É—é –¥–µ–≤—É—à–∫—É?", "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏."]
// ];
// –ù–∞–ø–∏—à–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–¥–∞—ë—Ç –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —à—É—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: "–ü–æ—á–µ–º—É –∫—É—Ä–∏—Ü–∞ –ø–µ—Ä–µ—à–ª–∞"), –∂–¥—ë—Ç, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–º—ë—Ç –∫–Ω–æ–ø–∫—É –∏ –≤–≤–µ–¥—ë—Ç —Å–≤–æ—é –¥–æ–≥–∞–¥–∫—É, –∞ –ø–æ—Ç–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –∫–æ–Ω—Ü–æ–≤–∫—É.
//
// –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —à—É—Ç–∫–∏ ‚Äî —Å–ª–µ–¥—É—é—â–∞—è. –ö–æ–≥–¥–∞ —à—É—Ç–∫–∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è ‚Äî –ø–∏—à–µ—Ç—Å—è "–®—É—Ç–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å".
//
// üß™ –ß—Ç–æ —Ç—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å:
// .next() –∏ .next(value)
//
// –û–±—Ä–∞—Ç–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
//
// –ü—Ä–æ—Å—Ç—É—é —Ñ–æ—Ä–º—É –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
//
// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–Ω—É—Ç—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞

document.addEventListener("DOMContentLoaded", () => {
    const jokesSetup = [
        "–ü–æ—á–µ–º—É –∫—É—Ä–∏—Ü–∞ –ø–µ—Ä–µ—à–ª–∞ –¥–æ—Ä–æ–≥—É?",
        "–ö–∞–∫ –∑–æ–≤—É—Ç —Å–æ–±–∞–∫—É –±–µ–∑ –ª–∞–ø?",
        "–ß—Ç–æ —Å–∫–∞–∂–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–≤–∏–¥–µ–≤ –∫—Ä–∞—Å–∏–≤—É—é –¥–µ–≤—É—à–∫—É?",
        '–°–µ—Ç–∞–ø–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç...'
    ]
    const jokesPunchline = [
        "–ß—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç–æ—Ä–æ–Ω—É –¥–æ—Ä–æ–≥–∏.",
        "–ù–µ–≤–∞–∂–Ω–æ ‚Äî –æ–Ω–∞ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø—Ä–∏–¥—ë—Ç.",
        "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.",
        '–ö–∞–∫ –∏ –ø–∞–Ω—á–ª–∞–π–Ω–æ–≤...'
    ]
    const setup = document.getElementsByTagName('button')[0];
    const assumption = document.getElementsByTagName('input')[0];
    const punchline = document.getElementsByTagName('button')[1];
    const setSetup = document.getElementById('setup');
    const setPunchline = document.getElementById('punchline');
    const userInput = document.getElementById('user');

    function* setupGenerator() {
        for (let i = 0; i < jokesSetup.length; i++) {
            yield jokesSetup[i];
        }
    }
    function* punchlineGenerator() {
        for (let i = 0; i < jokesPunchline.length; i++) {
            yield jokesPunchline[i]
        }
    }
    const punch = punchlineGenerator();
    const set = setupGenerator();
    setSetup.classList.add('setup');
    setPunchline.classList.add('disabledP');

    setup.addEventListener('click', () => {
        if (setSetup.classList.contains('setup') && setPunchline.classList.contains('disabledP')) {
            setSetup.textContent = set.next().value;
            setSetup.classList.remove('setup');
            setSetup.classList.add('disabledS');
            setPunchline.classList.remove('disabledP')
            setPunchline.classList.add('punchline')
        } else if (setSetup.classList.contains('disabledS') && setPunchline.classList.contains('punchline')) {
            setSetup.textContent = "–ü–æ–¥–æ–∂–¥–∏ –ü–∞–Ω—á–ª–∞–π–Ω–∞"
        }
    })
    punchline.addEventListener('click', () => {
        if (setPunchline.classList.contains('punchline') && setSetup.classList.contains('disabledS')) {
            setPunchline.textContent = punch.next().value;
            setPunchline.classList.remove('punchline');
            setPunchline.classList.add('disabledP');
            setSetup.classList.remove('disabledS');
            setSetup.classList.add('setup');
        } else if (setPunchline.classList.contains('disabledP') && setSetup.classList.contains('setup')) {
            setPunchline.textContent = '–ü–æ–¥–æ–∂–¥–∏ –°–µ—Ç–∞–ø–∞'
        }
    })
    assumption.addEventListener('keydown', (event) => {
        if (event.key === 'Enter') {
            const message = assumption.value;
            if (message.length > 0) {
                userInput.className = '';
                userInput.classList.add('userAssumption');
                userInput.textContent = message;
                assumption.value = '';
            }
        }
    })
})